{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname template (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname template",
            "default": ""
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.names.namespace",
            "default": ""
        },
        "clusterDomain": {
            "type": "string",
            "description": "Cluster domain",
            "default": "cluster.local"
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Common annotations to add to all MySQL resources (sub-charts are not considered). Evaluated as a template",
            "default": {}
        },
        "commonLabels": {
            "type": "object",
            "description": "Common labels to add to all MySQL resources (sub-charts are not considered). Evaluated as a template",
            "default": {}
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array with extra yaml to deploy with the chart. Evaluated as a template",
            "default": [],
            "items": {}
        },
        "serviceBindings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Create secret for service binding (Experimental)",
                    "default": false
                }
            }
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "MySQL image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "MySQL image repository",
                    "default": "bitnami/mysql"
                },
                "tag": {
                    "type": "string",
                    "description": "MySQL image tag (immutable tags are recommended)",
                    "default": "8.0.34-debian-11-r31"
                },
                "digest": {
                    "type": "string",
                    "description": "MySQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "MySQL image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify docker-registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Specify if debug logs should be enabled",
                    "default": false
                }
            }
        },
        "architecture": {
            "type": "string",
            "description": "MySQL architecture (`standalone` or `replication`)",
            "default": "standalone"
        },
        "auth": {
            "type": "object",
            "properties": {
                "rootPassword": {
                    "type": "string",
                    "description": "Password for the `root` user. Ignored if existing secret is provided",
                    "default": ""
                },
                "createDatabase": {
                    "type": "boolean",
                    "description": "Whether to create the .Values.auth.database or not",
                    "default": true
                },
                "database": {
                    "type": "string",
                    "description": "Name for a custom database to create",
                    "default": "my_database"
                },
                "username": {
                    "type": "string",
                    "description": "Name for a custom user to create",
                    "default": ""
                },
                "password": {
                    "type": "string",
                    "description": "Password for the new user. Ignored if existing secret is provided",
                    "default": ""
                },
                "replicationUser": {
                    "type": "string",
                    "description": "MySQL replication user",
                    "default": "replicator"
                },
                "replicationPassword": {
                    "type": "string",
                    "description": "MySQL replication user password. Ignored if existing secret is provided",
                    "default": ""
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Use existing secret for password details. The secret has to contain the keys `mysql-root-password`, `mysql-replication-password` and `mysql-password`",
                    "default": ""
                },
                "usePasswordFiles": {
                    "type": "boolean",
                    "description": "Mount credentials as files instead of using an environment variable",
                    "default": false
                },
                "customPasswordFiles": {
                    "type": "object",
                    "description": "Use custom password files when `auth.usePasswordFiles` is set to `true`. Define path for keys `root` and `user`, also define `replicator` if `architecture` is set to `replication`",
                    "default": {}
                }
            }
        },
        "initdbScripts": {
            "type": "object",
            "description": "Dictionary of initdb scripts",
            "default": {}
        },
        "initdbScriptsConfigMap": {
            "type": "string",
            "description": "ConfigMap with the initdb scripts (Note: Overrides `initdbScripts`)",
            "default": ""
        },
        "startdbScripts": {
            "type": "object",
            "description": "Dictionary of startdb scripts",
            "default": {}
        },
        "startdbScriptsConfigMap": {
            "type": "string",
            "description": "ConfigMap with the startdb scripts (Note: Overrides `startdbScripts`)",
            "default": ""
        },
        "primary": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the primary database (eg primary, master, leader, ...)",
                    "default": "primary"
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command on MySQL Primary container(s) (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args on MySQL Primary container(s) (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the MySQL Primary container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "configuration": {
                    "type": "string",
                    "description": "Configure MySQL Primary with a custom my.cnf file",
                    "default": "[mysqld]\ndefault_authentication_plugin=mysql_native_password\nskip-name-resolve\nexplicit_defaults_for_timestamp\nbasedir=/opt/bitnami/mysql\nplugin_dir=/opt/bitnami/mysql/lib/plugin\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndatadir=/bitnami/mysql/data\ntmpdir=/opt/bitnami/mysql/tmp\nmax_allowed_packet=16M\nbind-address=*\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid\nlog-error=/opt/bitnami/mysql/logs/mysqld.log\ncharacter-set-server=UTF8\ncollation-server=utf8_general_ci\nslow_query_log=0\nlong_query_time=10.0\n\n[client]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndefault-character-set=UTF8\nplugin_dir=/opt/bitnami/mysql/lib/plugin\n\n[manager]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid"
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "Name of existing ConfigMap with MySQL Primary configuration.",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for the MySQL primary statefulset",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations for MySQL primary pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "MySQL primary pod affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "MySQL primary pod anti-affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "MySQL primary node affinity preset type. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "MySQL primary node label key to match Ignored if `primary.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "MySQL primary node label values to match. Ignored if `primary.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for MySQL primary pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for MySQL primary pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for MySQL primary pods assignment",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "MySQL primary pods' priorityClassName",
                    "default": ""
                },
                "runtimeClassName": {
                    "type": "string",
                    "description": "MySQL primary pods' runtimeClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default)",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the MySQL primary pod needs to terminate gracefully",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "podManagementPolicy to manage scaling operation of MySQL primary pods",
                    "default": ""
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for MySQL primary pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the mounted volumes' filesystem",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "MySQL primary container securityContext",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the MySQL primary container",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set MySQL primary container's Security Context runAsNonRoot",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for MySQL primary containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for MySQL primary containers",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 15
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 10
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe for MySQL primary containers",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe for MySQL primary containers",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe for MySQL primary containers",
                    "default": {}
                },
                "extraFlags": {
                    "type": "string",
                    "description": "MySQL primary additional command line flags",
                    "default": ""
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables to be set on MySQL primary containers",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for MySQL primary containers",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for MySQL primary containers",
                    "default": ""
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose",
                    "default": [],
                    "items": {}
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable persistence on MySQL primary replicas using a `PersistentVolumeClaim`. If false, use emptyDir",
                            "default": true
                        },
                        "existingClaim": {
                            "type": "string",
                            "description": "Name of an existing `PersistentVolumeClaim` for MySQL primary replicas",
                            "default": ""
                        },
                        "subPath": {
                            "type": "string",
                            "description": "The name of a volume's sub path to mount for persistence",
                            "default": ""
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "MySQL primary persistent volume storage Class",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "MySQL primary persistent volume claim annotations",
                            "default": {}
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "MySQL primary persistent volume access Modes",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "MySQL primary persistent volume size",
                            "default": "8Gi"
                        },
                        "selector": {
                            "type": "object",
                            "description": "Selector to match an existing Persistent Volume",
                            "default": {}
                        }
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes to the MySQL Primary pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the MySQL Primary container(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers for the MySQL Primary pod(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers for the MySQL Primary pod(s)",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "MySQL Primary K8s service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "mysql": {
                                    "type": "number",
                                    "description": "MySQL Primary K8s service port",
                                    "default": 3306
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "mysql": {
                                    "type": "string",
                                    "description": "MySQL Primary K8s service node port",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "MySQL Primary K8s service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "MySQL Primary loadBalancerIP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Enable client source IP preservation",
                            "default": "Cluster"
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Addresses that are allowed when MySQL Primary service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for MySQL primary service",
                            "default": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        },
                        "headless": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional custom annotations for headless MySQL primary service.",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation for MySQL primary pods",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of MySQL primary pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of MySQL primary pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "podLabels": {
                    "type": "object",
                    "description": "MySQL Primary pod label. If labels are same as commonLabels , this will take precedence",
                    "default": {}
                }
            }
        },
        "secondary": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the secondary database (eg secondary, slave, ...)",
                    "default": "secondary"
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of MySQL secondary replicas",
                    "default": 1
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command on MySQL Secondary container(s) (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args on MySQL Secondary container(s) (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the MySQL Secondary container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "configuration": {
                    "type": "string",
                    "description": "Configure MySQL Secondary with a custom my.cnf file",
                    "default": "[mysqld]\ndefault_authentication_plugin=mysql_native_password\nskip-name-resolve\nexplicit_defaults_for_timestamp\nbasedir=/opt/bitnami/mysql\nplugin_dir=/opt/bitnami/mysql/lib/plugin\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndatadir=/bitnami/mysql/data\ntmpdir=/opt/bitnami/mysql/tmp\nmax_allowed_packet=16M\nbind-address=*\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid\nlog-error=/opt/bitnami/mysql/logs/mysqld.log\ncharacter-set-server=UTF8\ncollation-server=utf8_general_ci\nslow_query_log=0\nlong_query_time=10.0\n\n[client]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndefault-character-set=UTF8\nplugin_dir=/opt/bitnami/mysql/lib/plugin\n\n[manager]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid"
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "Name of existing ConfigMap with MySQL Secondary configuration.",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for the MySQL secondary statefulset",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations for MySQL secondary pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "MySQL secondary pod affinity preset. Ignored if `secondary.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "MySQL secondary pod anti-affinity preset. Ignored if `secondary.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "MySQL secondary node affinity preset type. Ignored if `secondary.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "MySQL secondary node label key to match Ignored if `secondary.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "MySQL secondary node label values to match. Ignored if `secondary.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for MySQL secondary pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for MySQL secondary pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for MySQL secondary pods assignment",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "MySQL secondary pods' priorityClassName",
                    "default": ""
                },
                "runtimeClassName": {
                    "type": "string",
                    "description": "MySQL secondary pods' runtimeClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default)",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the MySQL secondary pod needs to terminate gracefully",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "podManagementPolicy to manage scaling operation of MySQL secondary pods",
                    "default": ""
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for MySQL secondary pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the mounted volumes' filesystem",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "MySQL secondary container securityContext",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the MySQL secondary container",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set MySQL secondary container's Security Context runAsNonRoot",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for MySQL secondary containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for MySQL secondary containers",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 15
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe for MySQL secondary containers",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe for MySQL secondary containers",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe for MySQL secondary containers",
                    "default": {}
                },
                "extraFlags": {
                    "type": "string",
                    "description": "MySQL secondary additional command line flags",
                    "default": ""
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "An array to add extra environment variables on MySQL secondary containers",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for MySQL secondary containers",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for MySQL secondary containers",
                    "default": ""
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose",
                    "default": [],
                    "items": {}
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable persistence on MySQL secondary replicas using a `PersistentVolumeClaim`",
                            "default": true
                        },
                        "existingClaim": {
                            "type": "string",
                            "description": "Name of an existing `PersistentVolumeClaim` for MySQL secondary replicas",
                            "default": ""
                        },
                        "subPath": {
                            "type": "string",
                            "description": "The name of a volume's sub path to mount for persistence",
                            "default": ""
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "MySQL secondary persistent volume storage Class",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "MySQL secondary persistent volume claim annotations",
                            "default": {}
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "MySQL secondary persistent volume access Modes",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "MySQL secondary persistent volume size",
                            "default": "8Gi"
                        },
                        "selector": {
                            "type": "object",
                            "description": "Selector to match an existing Persistent Volume",
                            "default": {}
                        }
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes to the MySQL secondary pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the MySQL secondary container(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers for the MySQL secondary pod(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers for the MySQL secondary pod(s)",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "MySQL secondary Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "mysql": {
                                    "type": "number",
                                    "description": "MySQL secondary Kubernetes service port",
                                    "default": 3306
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "mysql": {
                                    "type": "string",
                                    "description": "MySQL secondary Kubernetes service node port",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "MySQL secondary Kubernetes service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "MySQL secondary loadBalancerIP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Enable client source IP preservation",
                            "default": "Cluster"
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Addresses that are allowed when MySQL secondary service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for MySQL secondary service",
                            "default": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        },
                        "headless": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional custom annotations for headless MySQL secondary service.",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation for MySQL secondary pods",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of MySQL secondary pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of MySQL secondary pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels for MySQL secondary pods",
                    "default": {}
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable the creation of a ServiceAccount for MySQL pods",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the created ServiceAccount",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for MySQL Service Account",
                    "default": {}
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Automount service account token for the server service account",
                    "default": true
                }
            }
        },
        "rbac": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Whether to create & use RBAC resources or not",
                    "default": false
                },
                "rules": {
                    "type": "array",
                    "description": "Custom RBAC rules to set",
                    "default": [],
                    "items": {}
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable creation of NetworkPolicy resources",
                    "default": false
                },
                "allowExternal": {
                    "type": "boolean",
                    "description": "The Policy model to apply.",
                    "default": true
                },
                "explicitNamespacesSelector": {
                    "type": "object",
                    "description": "A Kubernetes LabelSelector to explicitly select namespaces from which ingress traffic could be allowed to MySQL",
                    "default": {}
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes the owner and group of the persistent volume(s) mountpoint to `runAsUser:fsGroup`",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Init container volume-permissions image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Init container volume-permissions image repository",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Init container volume-permissions image tag (immutable tags are recommended)",
                            "default": "11-debian-11-r43"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Init container volume-permissions image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Specify docker-registry secret names as an array",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "description": "Init container volume-permissions resources",
                    "default": {}
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Start a side-car prometheus exporter",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Exporter image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Exporter image repository",
                            "default": "bitnami/mysqld-exporter"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Exporter image tag (immutable tags are recommended)",
                            "default": "0.15.0-debian-11-r24"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Exporter image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Specify docker-registry secret names as an array",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "MySQL metrics container securityContext",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the MySQL metrics container",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set MySQL metrics container's Security Context runAsNonRoot",
                            "default": true
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type for MySQL Prometheus Exporter",
                            "default": "ClusterIP"
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Kubernetes service clusterIP for MySQL Prometheus Exporter",
                            "default": ""
                        },
                        "port": {
                            "type": "number",
                            "description": "MySQL Prometheus Exporter service port",
                            "default": 9104
                        },
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.metrics.service.port }}"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "extraArgs": {
                    "type": "object",
                    "properties": {
                        "primary": {
                            "type": "array",
                            "description": "Extra args to be passed to mysqld_exporter on Primary pods",
                            "default": [],
                            "items": {}
                        },
                        "secondary": {
                            "type": "array",
                            "description": "Extra args to be passed to mysqld_exporter on Secondary pods",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for MySQL prometheus exporter containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for MySQL prometheus exporter containers",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 120
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "serviceMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Create ServiceMonitor Resource for scraping metrics using PrometheusOperator",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Specify the namespace in which the serviceMonitor resource will be created",
                            "default": ""
                        },
                        "jobLabel": {
                            "type": "string",
                            "description": "The name of the label on the target service to use as the job name in prometheus.",
                            "default": ""
                        },
                        "interval": {
                            "type": "string",
                            "description": "Specify the interval at which metrics should be scraped",
                            "default": "30s"
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Specify the timeout after which the scrape is ended",
                            "default": ""
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "RelabelConfigs to apply to samples before scraping",
                            "default": [],
                            "items": {}
                        },
                        "metricRelabelings": {
                            "type": "array",
                            "description": "MetricRelabelConfigs to apply to samples before ingestion",
                            "default": [],
                            "items": {}
                        },
                        "selector": {
                            "type": "object",
                            "description": "ServiceMonitor selector labels",
                            "default": {}
                        },
                        "honorLabels": {
                            "type": "boolean",
                            "description": "Specify honorLabels parameter to add the scrape endpoint",
                            "default": false
                        },
                        "labels": {
                            "type": "object",
                            "description": "Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "ServiceMonitor annotations",
                            "default": {}
                        }
                    }
                },
                "prometheusRule": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Creates a Prometheus Operator prometheusRule (also requires `metrics.enabled` to be `true` and `metrics.prometheusRule.rules`)",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace for the prometheusRule Resource (defaults to the Release Namespace)",
                            "default": ""
                        },
                        "additionalLabels": {
                            "type": "object",
                            "description": "Additional labels that can be used so prometheusRule will be discovered by Prometheus",
                            "default": {}
                        },
                        "rules": {
                            "type": "array",
                            "description": "Prometheus Rule definitions",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        }
    }
}